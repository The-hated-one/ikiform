@import "tailwindcss";

@theme {
  --font-mono: var(--hu-font-jetbrains);
  --font-inter: var(--hu-font-inter);

  --radius-ele: var(--radius);
  --radius-card: var(--card-radius);

  --color-background: hsl(var(--hu-background));
  --color-foreground: hsl(var(--hu-foreground));

  --color-card: hsl(var(--hu-card));
  --color-card-foreground: hsl(var(--hu-card-foreground));

  --color-primary: hsl(var(--hu-primary));
  --color-primary-foreground: hsl(var(--hu-primary-foreground));

  --color-accent: hsl(var(--hu-accent));
  --color-accent-foreground: hsl(var(--hu-accent-foreground));

  --color-secondary: hsl(var(--hu-secondary));
  --color-secondary-foreground: hsl(var(--hu-secondary-foreground));

  --color-muted: hsl(var(--hu-muted));
  --color-muted-foreground: hsl(var(--hu-muted-foreground));

  --color-destructive: hsl(var(--hu-destructive));
  --color-destructive-foreground: hsl(var(--hu-destructive-foreground));

  --color-border: hsl(var(--hu-border));
  --color-input: hsl(var(--hu-input));
  --color-ring: hsl(var(--hu-ring));
}

@theme inline {
  --animate-aurora: aurora 60s linear infinite;
  @keyframes aurora {
    from {
      background-position: 50% 50%, 50% 50%;
    }
    to {
      background-position: 350% 50%, 350% 50%;
    }
  }
}

:root {
  --hu-font-inter: var(--font-inter);
  --hu-font-jetbrains: var(--font-jetbrains-mono);

  --radius: 0.8rem;
  --card-radius: 1rem;
  --hu-background: 0, 0%, 100%;
  --hu-foreground: 0, 0%, 10%;
  --hu-card: 0, 0%, 98%;
  --hu-card-foreground: 0, 0%, 10%;
  --hu-primary: 0, 0%, 20%;
  --hu-primary-foreground: 0, 0%, 98%;
  --hu-secondary: 0, 0%, 94%;
  --hu-secondary-foreground: 0, 0%, 20%;
  --hu-muted: 0, 0%, 95%;
  --hu-muted-foreground: 0, 0%, 40%;
  --hu-accent: 0, 0%, 96%;
  --hu-accent-foreground: 0, 0%, 20%;
  --hu-destructive: 0, 60%, 50%;
  --hu-destructive-foreground: 0, 0%, 98%;
  --hu-border: 0, 0%, 95%;
  --hu-input: 0, 0%, 100%;
  --hu-ring: 0 0% 48%;
}

.dark {
  --hu-background: 0, 0%, 7%;
  --hu-foreground: 0, 0%, 100%;
  --hu-card: 0, 0%, 10%;
  --hu-card-foreground: 0, 0%, 92%;
  --hu-primary: 0, 0%, 100%;
  --hu-primary-foreground: 0, 0%, 0%;
  --hu-secondary: 0, 0%, 14%;
  --hu-secondary-foreground: 0, 0%, 92%;
  --hu-muted: 0, 0%, 14%;
  --hu-muted-foreground: 0, 0%, 60%;
  --hu-accent: 0, 0%, 16%;
  --hu-accent-foreground: 0, 0%, 92%;
  --hu-destructive: 0, 60%, 50%;
  --hu-destructive-foreground: 0, 0%, 98%;
  --hu-border: 0, 0%, 15%;
  --hu-input: 0, 0%, 14%;
  --hu-ring: 0, 0%, 45%;
}

::selection {
  background-color: hsl(var(--hu-foreground));
  color: hsl(var(--hu-background));
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground font-inter;
  }
}

.toast {
  border-radius: var(--radius-ele) !important;
  font-weight: 500 !important;
}

.go2072408551 {
  div {
    font-size: 13px;
    font-weight: 500;
    text-align: center;
  }
}

/* Form Builder Specific Styles */
.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.line-clamp-3 {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Custom scrollbar for better design */
.custom-scrollbar {
  scrollbar-width: thin;
  scrollbar-color: hsl(var(--hu-muted)) transparent;
}

.custom-scrollbar::-webkit-scrollbar {
  width: 6px;
}

.custom-scrollbar::-webkit-scrollbar-track {
  background: transparent;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background-color: hsl(var(--hu-muted));
  border-radius: 3px;
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background-color: hsl(var(--hu-muted-foreground));
}

/* Form card hover effects */
.form-card-hover {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.form-card-hover:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

.dark .form-card-hover:hover {
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.25),
    0 4px 6px -2px rgba(0, 0, 0, 0.1);
}

/* Gradient backgrounds for empty states */
.gradient-bg {
  background: linear-gradient(
    135deg,
    hsl(var(--hu-accent)) 0%,
    hsl(var(--hu-muted)) 100%
  );
}

/* Button loading states */
.button-loading {
  position: relative;
  pointer-events: none;
}

.button-loading::after {
  content: "";
  position: absolute;
  inset: 0;
  background: inherit;
  border-radius: inherit;
  opacity: 0.7;
}

.button-loading::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 16px;
  height: 16px;
  margin: -8px 0 0 -8px;
  border: 2px solid transparent;
  border-top-color: currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
